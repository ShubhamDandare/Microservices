
===================Eureka client pom.xml ============================
<dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
 <repositories>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

=====================pom.xml ==properties============================
<spring-cloud.version>2021.0.0-RC1</spring-cloud.version>
=====================================================================

<dependency>
    <groupId>org.springframework.cloud</groupId>
    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
    <version>3.0.2</version>
</dependency>

=============Eureka client config===============================
eureka.client.serviceUrl.defaultZone  = http://localhost:8761/eureka
#eureka.client.instance.hostname = true
spring.application.name =HOSPITALMANAGEMENT-SERVICE
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost

==========Cloude API Gateway configuration =======================================
server.port=8888
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka
#eureka.client.instance.hostname = true
spring.application.name= CLOUDEGATEWAY-SERVICE
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost

hystrix.command.fallbackcmd.execution.isolation.thread.timeoutInMilliseconds=4000

management.endpoints.web.exposure.include=hystrix.stream

spring.cloud.gateway.routes[0].id=HOSPITALMANAGEMENT-SERVICE
spring.cloud.gateway.routes[0].uri=lb://HOSPITALMANAGEMENT-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/Hospital/**
spring.cloud.gateway.routes[0].filters[0].name=CircuitBraker(HospitalManagement)
spring.cloud.gateway.routes[0].filters[0].args.name=hospitalManagement-service
spring.cloud.gateway.routes[0].filters[0].args.name.fallbackuri=forword:/hospitalFallback


spring.cloud.gateway.routes[1].id=PATIENTMANAGEMENT-SERVICE
spring.cloud.gateway.routes[1].uri=lb://PATIENTMANAGEMENT-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/patient/**
spring.cloud.gateway.routes[1].filters[1].name=CircuitBraker(PatientManagement)
spring.cloud.gateway.routes[1].filters[1].args.name=patientManagement-service
spring.cloud.gateway.routes[1].filters[1].args.name.fallbackuri=forword:/patientFallback


spring.cloud.gateway.routes[2].id=DOCTORMANAGEMENT-SERVICE
spring.cloud.gateway.routes[2].uri=lb://DOCTORMANAGEMENT-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/doctor/**
spring.cloud.gateway.routes[2].filters[2].name=CircuitBraker(DoctorManagement)
spring.cloud.gateway.routes[2].filters[2].args.name=doctorManagement-service
spring.cloud.gateway.routes[2].filters[2].args.name.fallbackuri=forword:/doctorFallback


spring.cloud.gateway.routes[3].id=HOSPITALRECORD-SERVICE
spring.cloud.gateway.routes[3].uri=lb://HOSPITALRECORD-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/Record/**
=====================Circuit Braker part ============================
spring.cloud.gateway.routes[3].filters[3].name=CircuitBraker(RecordManagement)
spring.cloud.gateway.routes[3].filters[3].args.name=hospitalRecordManagement-service
spring.cloud.gateway.routes[3].filters[3].args.name.fallbackuri=forword:/hospitalRecordFallback




=========hystrix dashboard ==========================
hystrix.dashboard.proxy-stream-allow-list=*


